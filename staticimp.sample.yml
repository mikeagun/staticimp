# sample staticimp.yml server configuration file

# host to listen on (default: "127.0.0.1")
host: 0.0.0.0
# port to listen on (default: 8080)
#port: 8080

# format of "{@timestamp}" (default: "%Y%m%dT%H%M%S%.3fZ")
#timestamp_format: "%Y%m%dT%H%M%S%.3fZ"

# configured backends
# key - backend name (can be whatever you want)
# driver - type of backend (currently support gitlab and debug)
backends:
  # path to project conf file, or empty string for server conf only (default: "")
  #project_config_path: "staticimp.yml"
  # serialization format for project config (default: yaml)
  #project_config_format: yaml
  #debug:
  #  driver: debug
  gitlab:
    driver: gitlab
    # gitlab backend options:
    # NOTE: both of these can be overriden by the matching <backend>_<var> environment variable
    # host - hostname for the gitlab server (no leading https://)
    # token - authentication token
    host: git.example.com
    # specify token here or load from environment variable gitlab_token
    #  - NOTE: the env var is backend-specific, so if you call your backend mygitlab, it would be mygitlab_token
    #token=...

# configured entry types
# `key:` - entry type (can be whatever you want)
# `key.fields:` - configuration for processing entry fields
# `key.review:` - whether to moderate comments
#   - if true, entries get created in 
# `key.format:` - serialization format for entries
# `key.git:` - git specific entry configuration
#   - all the git config parameters support placeholders
#   `path:` - path of directory to store entries in
#   `filename:` - name of entry file
#   `branch:` - branch to commit entries to
#     - if review enabled, commits entry to new branch and submits MR to target branch
#   `commit_message:` - commit message to use
entries: 
  comment:
    fields:
      #allowed: [ "name", "email", "url", "message" ]
      allowed: ["name", "email", "website", "comment", "replyThread", "replyName", "replyID"]
      required: ["name", "email", "comment"]
      extra:
        _id: #add comment uid as '_id' field
          value: "{@id}"
        date: #add entry timestamp (verbose ISO8601)
          #for format syntax see: https://docs.rs/chrono/latest/chrono/format/strftime/index.html
          value: "{@date:%+}"
      transforms:
        - field: email
          transform: md5
    #review: false
    #format: yaml
    git:
      path: "data/comments/{params.slug}" #default: "data/comments"
      #filename: "comment-{@timestamp}.yml"
      #branch: main
      #commit_message: "New staticimp entry"
      #review_branch: "staticimp_{@id}"
      #mr_description: "new staticimp entry awaiting approval\n\nMerge the pull request to accept it, or close it to deny the entry"
